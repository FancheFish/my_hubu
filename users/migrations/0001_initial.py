# Generated by Django 2.1.4 on 2019-02-13 12:29

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User_Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='username', max_length=8, verbose_name='昵称')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, validators=[django.core.validators.RegexValidator('\\d{11}')], verbose_name='电话号码')),
                ('levels', models.PositiveIntegerField(blank=True, default=0, verbose_name='活跃积分')),
                ('avatar', imagekit.models.fields.ProcessedImageField(blank=True, default='image/timg.jpg', height_field='avatarHeight', max_length=300, null=True, upload_to='image/%Y/%m', verbose_name='用户头像', width_field='avatarWeight')),
                ('avatarWeight', models.PositiveIntegerField(default=150, verbose_name='个人头像宽度')),
                ('avatarHeight', models.PositiveIntegerField(default=150, verbose_name='个人头像高度')),
                ('privilege', models.CharField(blank=True, default=0, max_length=200, verbose_name='权限')),
                ('gender', models.CharField(choices=[('male', '男'), ('female', '女')], default='female', max_length=10, verbose_name='性别')),
                ('oneWords', models.CharField(blank=True, default='他很懒,还没有更新一句话介绍...', max_length=50, null=True, verbose_name='一句话介绍自己')),
                ('location', models.CharField(blank=True, default='暂无', max_length=20, null=True, verbose_name='居住地')),
                ('trade', models.CharField(blank=True, default='生物信息', max_length=20, null=True, verbose_name='所在行业')),
                ('jobs', models.CharField(blank=True, default='暂无', max_length=50, null=True, verbose_name='工作经历')),
                ('school', models.CharField(blank=True, default='暂无', max_length=50, null=True, verbose_name='教育经历')),
                ('introduction', models.TextField(blank=True, default='暂无', null=True, verbose_name='个人简介')),
                ('agreeNumber', models.PositiveIntegerField(default=0, verbose_name='总被点赞次数')),
                ('attentionNumber', models.PositiveIntegerField(default=0, verbose_name='总被关注次数')),
                ('allGoodBlogerNum', models.PositiveIntegerField(default=0, verbose_name='总有利数')),
                ('allLookNumber', models.PositiveIntegerField(default=0, verbose_name='个人主页总被浏览数')),
                ('friends', models.ManyToManyField(blank=True, null=True, related_name='_user_info_friends_+', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户信息',
                'verbose_name': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FriendsApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='关注情况（0为sender关注，1为相互关注）')),
                ('isRead', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='是否已读')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendsApplicationReceiver', to=settings.AUTH_USER_MODEL, verbose_name='好友申请接收者')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friendsApplicationSender', to=settings.AUTH_USER_MODEL, verbose_name='好友申请发起者')),
            ],
            options={
                'verbose_name_plural': '账户关注',
                'verbose_name': '账户关注',
            },
        ),
    ]
